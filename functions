#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE  ]] && set -x

APP="$2"
REDIS_ROOT="$DOKKU_ROOT/$APP/rediskr"
REDIS_IMAGE="redis:3.0"
REDIS_CONTAINER_NAME="dokku-rediskr-$APP"

check_already_exists() {
  [[ -d "$REDIS_ROOT" ]] && echo "Database for $APP already exists" && exit 1
}

check_exists() {
  [[ ! -d "$REDIS_ROOT" ]] && echo "No database configured for $APP" && exit 1
}

check_app() {
  [[ -z "$APP" ]] && echo "Please specify an app to run the command on" && exit 1
}

load_ip_and_container() {
  REDIS_ID=$(docker ps -f status=running | grep "$REDIS_CONTAINER_NAME" | awk '{print $1}') || true
  if [[ -n "$REDIS_ID" ]]; then
    PRIVATE_IP=$(docker inspect "$REDIS_ID" | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
    PORT=$(cat "$REDIS_ROOT/port")
  fi
}

db_url() {
  local APP="$1"
  local PASSWORD=$(cat "$REDIS_ROOT/pass")
  echo "redis://redis:${PASSWORD}@${PRIVATE_IP}:${PORT}/0"
}

env_for() {
  local APP="$1"
  if [[ -f "$REDIS_ROOT/pass" ]]; then
    local URL=$(db_url "$APP")
    local PASSWORD=$(cat "$REDIS_ROOT/pass")
    echo "REDIS_URL=$URL REDIS_HOST=$PRIVATE_IP REDIS_PORT=$PORT REDIS_NAME=0 REDIS_PASS=$PASSWORD"
  fi
}

set_env_for() {
  load_ip_and_container
  local APP="$1"
  dokku_log_info1 "Setting config vars for $APP"
  dokku config:set-norestart "$APP" $(env_for "$APP") &> /dev/null
}
