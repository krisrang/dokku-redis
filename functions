#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE  ]] && set -x

APP="$2"
REDIS_ROOT="$DOKKU_ROOT/$APP/rediskr"
REDIS_IMAGE="redis:3.0"

redis_check_already_exists() {
  [[ -d "$REDIS_ROOT" ]] && echo "Database for $APP already exists" && exit 1
}

redis_check_exists() {
  [[ ! -d "$REDIS_ROOT" ]] && echo "No database configured for $APP" && exit 1
}

redis_load_container_id() {
  if [[ -f "$REDIS_ROOT/CONTAINERID" ]]; then
    CNT_ID=$(cat "$REDIS_ROOT/CONTAINERID")
    REDIS_ID=$(docker ps -f status=running | grep "$CNT_ID" | awk '{print $1}') || true
    if [[ -n "$REDIS_ID" ]]; then
      PRIVATE_IP=$(docker inspect "$REDIS_ID" | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
      PORT=$(cat "$REDIS_ROOT/PORT")
    fi
  fi
}

redis_start_container() {
  BIND=$(cat "$REDIS_ROOT/BIND")
  REDIS_ID=$(docker run -d -p $BIND -v $REDIS_ROOT/data:/data -v $REDIS_ROOT/redis.conf:/etc/redis/redis.conf "$REDIS_IMAGE" redis-server /etc/redis/redis.conf)
  PRIVATE_IP=$(docker inspect "$REDIS_ID" | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
  echo $REDIS_ID > "$REDIS_ROOT/CONTAINERID"
  echo $PRIVATE_IP > "$REDIS_ROOT/IP"
  echo $PORT > "$REDIS_ROOT/PORT"
}

redis_db_url() {
  local PASSWORD=$(cat "$REDIS_ROOT/PASS")
  echo "redis://redis:${PASSWORD}@${PRIVATE_IP}:${PORT}/0"
}

redis_env_for() {
  local APP="$1"
  if [[ -f "$REDIS_ROOT/CONTAINERID" ]]; then
    local URL=$(redis_db_url "$APP")
    local PASSWORD=$(cat "$REDIS_ROOT/PASS")
    echo "-e REDIS_URL=$URL -e REDIS_HOST=$PRIVATE_IP -e REDIS_PORT=$PORT -e REDIS_DB=0 -e REDIS_NAME=0 -e REDIS_PASS=$PASSWORD"
  fi
}

interactive_docker_exec() {
  local TTY_OPT=$([[ -t 0 ]] && echo "--tty")
  docker exec --interactive $TTY_OPT "$@"
}
